generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ComandaStatus {
  OPEN
  CLOSED
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  displayName  String
  passwordHash String
  createdAt    DateTime @default(now())

  refreshTokens RefreshToken[]
  Comanda       Comanda[]
}

model RefreshToken {
  id        String    @id @default(uuid())
  userId    String
  tokenHash String
  expiresAt DateTime
  revokedAt DateTime?
  userAgent String?
  ip        String?
  createdAt DateTime  @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Comanda {
  id           String        @id @default(uuid())
  name         String
  status       ComandaStatus @default(OPEN)
  ownerId      String
  owner        User          @relation(fields: [ownerId], references: [id])
  participants Participant[]
  items        Item[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  closedAt  DateTime?

  @@index([ownerId])
  @@index([createdAt])
}

model Item {
  id           String       @id @default(uuid())
  name         String
  price        Decimal      @db.Decimal(10, 2)
  quantity     Int          @default(1)
  note         String?
  comandaId    String
  comanda      Comanda      @relation(fields: [comandaId], references: [id], onDelete: Cascade)
  assignedToId String?
  assignedTo   Participant? @relation(fields: [assignedToId], references: [id])

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  RateioEntry RateioEntry[]

  @@index([comandaId])
  @@index([assignedToId])
}

model RateioEntry {
  id            String      @id @default(uuid())
  itemId        String
  item          Item        @relation(fields: [itemId], references: [id], onDelete: Cascade)
  participantId String
  participant   Participant @relation(fields: [participantId], references: [id], onDelete: Cascade)
  percentage    Decimal     @db.Decimal(5, 2)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([itemId, participantId])
  @@index([participantId])
}

model Participant {
  id        String  @id @default(uuid())
  name      String
  userId    String?
  comandaId String
  comanda   Comanda @relation(fields: [comandaId], references: [id], onDelete: Cascade)

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Item        Item[]
  RateioEntry RateioEntry[]

  @@unique([comandaId, name])
  @@index([comandaId])
  @@index([userId])
}
